# NOTE: update this with your service name
service: LeetLogger

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: dev
  region: us-west-2
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #

  environment:
    questionTable: ${self:custom.QuestionTable.name}
    entryTable: ${self:custom.EntryTable.name}
    s3BucketName: ${self:custom.NoteBucket.name}
    addEntryTopicArn: ${self:custom.AddEntryTopic.arn}
    deleteEntryTopicArn: ${self:custom.DeleteEntryTopic.arn}

  iamRoleStatements:
    - ${file(iam/DynamodbIAM.yml):DynamodbIAM}
    - ${file(iam/S3BucketIAM.yml):S3BucketIAM}
    - ${file(iam/SNSIAM.yml):SNSIAM}

resources:
  Resources:
    QuestionTable: ${file(resources/QuestionTable.yml):QuestionTable}
    EntryTable: ${file(resources/EntryTable.yml):EntryTable}
    NoteBucket: ${file(resources/NoteBucket.yml):NoteBucket}
    AddEntryTopic: ${file(resources/SNSTopics.yml):AddEntryTopic}
    DeleteEntryTopic: ${file(resources/SNSTopics.yml):DeleteEntryTopic}

functions:
  addEntry: ${file(functions/entryApiFunctions.yml):addEntry}
  getEntry: ${file(functions/entryApiFunctions.yml):getEntry}
  deleteEntry: ${file(functions/entryApiFunctions.yml):deleteEntry}
  listEntriesAll: ${file(functions/entryApiFunctions.yml):listEntriesAll}
  listEntriesByTitle: ${file(functions/entryApiFunctions.yml):listEntriesByTitle}

  addQuestion: ${file(functions/questionApiFunctions.yml):addQuestion}
  deleteQuestion: ${file(functions/questionApiFunctions.yml):deleteQuestion}
  getQuestion: ${file(functions/questionApiFunctions.yml):getQuestion}
  listQuestionAll: ${file(functions/questionApiFunctions.yml):listQuestionAll}
  modifyQuestionNotes: ${file(functions/questionApiFunctions.yml):modifyQuestionNotes}
  modifyQuestionRevisionDate: ${file(functions/questionApiFunctions.yml):modifyQuestionRevisionDate}

  loginUserS3Create: ${file(functions/loginApiFunctions.yml):loginUserS3Create}

custom:
  QuestionTable:
    name: !Ref QuestionTable
    arn: !GetAtt QuestionTable.Arn
  EntryTable:
    name: !Ref EntryTable
    arn: !GetAtt EntryTable.Arn
  NoteBucket:
    name: !Ref NoteBucket
    arn: !GetAtt NoteBucket.Arn
  AddEntryTopic:
    name: AddEntryTopic-${self:provider.stage}
    arn: !Ref AddEntryTopic
  DeleteEntryTopic:
    name: DeleteEntryTopic-${self:provider.stage}
    arn: !Ref DeleteEntryTopic
  bundle:
    linting: false

[{"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/index.js":"1","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/App.js":"2","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/Layout/index.js":"3","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/Header/index.js":"4","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/SideNav/index.js":"5","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/Dashboard/index.js":"6","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/SideNav/NavItems/index.js":"7","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/Header/Logo/index.js":"8","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryNotes/index.js":"9","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/StatisticsPanel/index.js":"10","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/index.js":"11","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/RevisionQuestionsPanel/index.js":"12","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/LogCalendar/index.js":"13","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/BarGraph/index.js":"14","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/RecentQuestionsPanel/index.js":"15","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/SideNav/NavItems/NavItem/index.js":"16","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryRadioDropdown/index.js":"17","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntrySelect/index.js":"18","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryRadio/index.js":"19","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryText/index.js":"20","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryTags/index.js":"21","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryTime/index.js":"22","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/LogCalendar/CalendarLegend/index.js":"23","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/LogCalendar/LogCalendarEvent/index.js":"24","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/LogCalendar/LogCalendarEvent/marker.js":"25","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/Tag/index.js":"26","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-history/HistoryPanel/index.js":"27","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/Question/index.js":"28","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/Question/RevisionButtons/index.js":"29","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/index.js":"30","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/DatabaseItem/index.js":"31","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/index.js":"32","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/DatabaseQuestion/index.js":"33","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/index.js":"34","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/rootReducer.js":"35","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/axios/index.js":"36","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/entriesReducer.js":"37","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/entriesActions/entriesActionTypes.js":"38","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/entriesActions/entriesActionCreators.js":"39","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/dateHelpers.js":"40","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/BarGraph/selectors/getBarGraphData.js":"41","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/titleAndTypeMaps.js":"42","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-history/selectors/historyDataSelector.js":"43","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/NoFields/index.js":"44","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/paginatedData.js":"45","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/Pagination/PaginatedDataSelector.js":"46","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/questionsReducer.js":"47","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/questionsActions/questionsActionsTypes.js":"48","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/questionsActions/questionsActionCreators.js":"49","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/RecentQuestionsPanel/RecentQuestion/index.js":"50","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/RevisionQuestionsPanel/selectors/revisionQuestionsSelector.js":"51","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/DatabaseQuestion/selectors/getQuestionDataByType.js":"52","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/alphabetArray.js":"53","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/alphabeticalSort.js":"54","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/DatabaseQuestion/AlphabeticHeaderPanel/index.js":"55","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/index.js":"56","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/QuestionTypeTitle/index.js":"57","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/QuestionPanelEntry/index.js":"58","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/Validation/index.js":"59","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/validationReducer.js":"60","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/validationActions/validationActionTypes.js":"61","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/validationActions/validationActionCreators.js":"62","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/textHelpers.js":"63","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/addFormHelpers.js":"64","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/QuestionPanelEntry/EntrySummary/index.js":"65","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/modalReducer.js":"66","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/modalActions/modalActionTypes.js":"67","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/modalActions/modalActionCreators.js":"68","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/EntryModal.js":"69","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/NoteModal.js":"70","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/ReviewDateEditModal.js":"71","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/modalComponent.js":"72"},{"size":176,"mtime":1610277437970,"results":"73","hashOfConfig":"74"},{"size":322,"mtime":1613273846932,"results":"75","hashOfConfig":"74"},{"size":2065,"mtime":1615772295929,"results":"76","hashOfConfig":"74"},{"size":214,"mtime":1610276951204,"results":"77","hashOfConfig":"74"},{"size":230,"mtime":1610318470195,"results":"78","hashOfConfig":"74"},{"size":599,"mtime":1612059456923,"results":"79","hashOfConfig":"74"},{"size":329,"mtime":1612062391237,"results":"80","hashOfConfig":"74"},{"size":347,"mtime":1613284696782,"results":"81","hashOfConfig":"74"},{"size":2381,"mtime":1615871618591,"results":"82","hashOfConfig":"74"},{"size":2447,"mtime":1613354765625,"results":"83","hashOfConfig":"74"},{"size":2140,"mtime":1615771001311,"results":"84","hashOfConfig":"74"},{"size":2527,"mtime":1615764403742,"results":"85","hashOfConfig":"74"},{"size":1840,"mtime":1613962095213,"results":"86","hashOfConfig":"74"},{"size":5493,"mtime":1614490638583,"results":"87","hashOfConfig":"74"},{"size":1341,"mtime":1613713130977,"results":"88","hashOfConfig":"74"},{"size":1713,"mtime":1613962304071,"results":"89","hashOfConfig":"74"},{"size":1569,"mtime":1614574510860,"results":"90","hashOfConfig":"74"},{"size":1357,"mtime":1615157500043,"results":"91","hashOfConfig":"74"},{"size":1120,"mtime":1614569818995,"results":"92","hashOfConfig":"74"},{"size":830,"mtime":1614581818216,"results":"93","hashOfConfig":"74"},{"size":1131,"mtime":1615862040250,"results":"94","hashOfConfig":"74"},{"size":689,"mtime":1614565909124,"results":"95","hashOfConfig":"74"},{"size":487,"mtime":1610341481369,"results":"96","hashOfConfig":"74"},{"size":500,"mtime":1612051459419,"results":"97","hashOfConfig":"74"},{"size":338,"mtime":1612050588643,"results":"98","hashOfConfig":"74"},{"size":489,"mtime":1615871067704,"results":"99","hashOfConfig":"74"},{"size":3870,"mtime":1615764504543,"results":"100","hashOfConfig":"74"},{"size":2178,"mtime":1615770678357,"results":"101","hashOfConfig":"74"},{"size":310,"mtime":1612156297342,"results":"102","hashOfConfig":"74"},{"size":888,"mtime":1613957749645,"results":"103","hashOfConfig":"74"},{"size":602,"mtime":1613957833747,"results":"104","hashOfConfig":"74"},{"size":5195,"mtime":1615771168749,"results":"105","hashOfConfig":"74"},{"size":3122,"mtime":1615178295610,"results":"106","hashOfConfig":"74"},{"size":316,"mtime":1613549423360,"results":"107","hashOfConfig":"74"},{"size":425,"mtime":1615771631429,"results":"108","hashOfConfig":"74"},{"size":153,"mtime":1613278774821,"results":"109","hashOfConfig":"74"},{"size":1107,"mtime":1613969805799,"results":"110","hashOfConfig":"74"},{"size":274,"mtime":1615156460139,"results":"111","hashOfConfig":"74"},{"size":6853,"mtime":1615771348575,"results":"112","hashOfConfig":"74"},{"size":1061,"mtime":1614489419501,"results":"113","hashOfConfig":"74"},{"size":604,"mtime":1613960686621,"results":"114","hashOfConfig":"74"},{"size":621,"mtime":1613358257865,"results":"115","hashOfConfig":"74"},{"size":259,"mtime":1613450414912,"results":"116","hashOfConfig":"74"},{"size":256,"mtime":1613440565761,"results":"117","hashOfConfig":"74"},{"size":525,"mtime":1613450617359,"results":"118","hashOfConfig":"74"},{"size":1500,"mtime":1615764295503,"results":"119","hashOfConfig":"74"},{"size":483,"mtime":1615166646695,"results":"120","hashOfConfig":"74"},{"size":68,"mtime":1614470489694,"results":"121","hashOfConfig":"74"},{"size":1155,"mtime":1614470482220,"results":"122","hashOfConfig":"74"},{"size":665,"mtime":1613713149645,"results":"123","hashOfConfig":"74"},{"size":348,"mtime":1615176133003,"results":"124","hashOfConfig":"74"},{"size":371,"mtime":1613969762420,"results":"125","hashOfConfig":"74"},{"size":223,"mtime":1613967609040,"results":"126","hashOfConfig":"74"},{"size":378,"mtime":1613969710975,"results":"127","hashOfConfig":"74"},{"size":1101,"mtime":1614469668210,"results":"128","hashOfConfig":"74"},{"size":6376,"mtime":1615870925778,"results":"129","hashOfConfig":"74"},{"size":774,"mtime":1615683009543,"results":"130","hashOfConfig":"74"},{"size":770,"mtime":1615784726953,"results":"131","hashOfConfig":"74"},{"size":286,"mtime":1615159817829,"results":"132","hashOfConfig":"74"},{"size":589,"mtime":1615160364958,"results":"133","hashOfConfig":"74"},{"size":102,"mtime":1615160196497,"results":"134","hashOfConfig":"74"},{"size":403,"mtime":1615772605955,"results":"135","hashOfConfig":"74"},{"size":1181,"mtime":1615165960533,"results":"136","hashOfConfig":"74"},{"size":1564,"mtime":1615771051384,"results":"137","hashOfConfig":"74"},{"size":1663,"mtime":1615871056850,"results":"138","hashOfConfig":"74"},{"size":503,"mtime":1615775739647,"results":"139","hashOfConfig":"74"},{"size":82,"mtime":1615770179192,"results":"140","hashOfConfig":"74"},{"size":251,"mtime":1615772675794,"results":"141","hashOfConfig":"74"},{"size":948,"mtime":1615871680679,"results":"142","hashOfConfig":"74"},{"size":524,"mtime":1615865713382,"results":"143","hashOfConfig":"74"},{"size":1357,"mtime":1615786275122,"results":"144","hashOfConfig":"74"},{"size":731,"mtime":1615865514907,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"nroaic",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"148"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"148"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"148"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"148"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"148"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"148"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"148"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/index.js",[],["301","302"],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/App.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/Layout/index.js",["303"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Header from \"../Header\";\nimport SideNav from \"../SideNav\";\nimport Dashboard from \"../package-dashboard/Dashboard\";\nimport AddForm from \"../package-addForm/AddForm\";\nimport History from \"../package-history/HistoryPanel\";\nimport Database from \"../package-database/Database\";\nimport Validation from \"../common/Validation\";\nimport DatabaseQuestion from \"../package-database/Database/DatabaseQuestion\";\nimport QuestionPanel from \"../package-database/QuestionPanel\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport * as entryActions from \"store/actions/entriesActions/entriesActionCreators\";\nimport * as questionActions from \"store/actions/questionsActions/questionsActionCreators\";\nimport \"./layout.scss\";\n\nconst Layout = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(entryActions.loadEntries());\n    dispatch(questionActions.loadQuestions());\n  }, []);\n\n  const validation = useSelector((state) => state.validation);\n  const isModalOpen = useSelector((state) => state.modal.show);\n  return (\n    <div>\n      {isModalOpen && <div className=\"Layout-modal\"></div>}\n      {validation.show && (\n        <Validation message={validation.message} isError={validation.isError} />\n      )}\n      <div className=\"Layout-content\">\n        <BrowserRouter>\n          <Header />\n          <SideNav />\n          <Switch>\n            <Route path=\"/new\" component={AddForm} />\n            <Route path=\"/history\" component={History} />\n            <Route path=\"/database\" exact component={Database} />\n            <Route\n              path=\"/database/:questionType\"\n              exact\n              component={DatabaseQuestion}\n            />\n            <Route\n              path=\"/database/:questionType/:questionId\"\n              component={QuestionPanel}\n            />\n            <Route path=\"/\" component={Dashboard} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/Header/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/SideNav/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/Dashboard/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/SideNav/NavItems/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/Header/Logo/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryNotes/index.js",["304"],"import React, { createRef } from \"react\";\nimport \"./formEntryNotes.scss\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nconst FormEntryNotes = ({\n  notesState,\n  onNotesStateChange,\n  type,\n  readOnly = false,\n}) => {\n  const Size = Quill.import(\"formats/size\");\n  Size.whitelist = [\"small\", \"medium\", \"large\"];\n\n  const modules = {\n    toolbar: {\n      container: \"#toolbar\",\n    },\n  };\n\n  return (\n    <div\n      className={`FormEntryNotes ${\n        type === \"NoteModal\" && \"FormEntryNotes-lg\"\n      }`}\n    >\n      {!type && <div className=\"FormEntryNotes-title\">Notes</div>}\n      <div className=\"FormEntryNotes-editor\">\n        <div id=\"toolbar\" className={readOnly && \"hide-toolbar\"}>\n          <span className=\"ql-formats\">\n            <button id=\"bold\" className=\"ql-bold\" />\n            <button id=\"italic\" className=\"ql-italic\" />\n            <button id=\"underline\" className=\"ql-underline\" />\n          </span>\n          <span className=\"ql-formats\">\n            <select id=\"size\" className=\"ql-size\" defaultValue=\"medium\">\n              <option value=\"small\">Size 1</option>\n              <option value=\"medium\">Size 2</option>\n              <option value=\"large\">Size 3</option>\n            </select>\n          </span>\n          <span className=\"ql-formats\">\n            <button id=\"list-1\" className=\"ql-list\" value=\"ordered\" />\n            <button id=\"list-2\" className=\"ql-list\" value=\"bullet\" />\n            <button id=\"indent-1\" className=\"ql-indent\" value=\"-1\" />\n            <button id=\"indent-2\" className=\"ql-indent\" value=\"+1\" />\n          </span>\n          <span className=\"ql-formats\">\n            <select id=\"align\" className=\"ql-align\" />\n            <select id=\"color\" className=\"ql-color\" />\n            <select id=\"background\" className=\"ql-background\" />\n          </span>\n          <span className=\"ql-formats\">\n            <button id=\"image\" className=\"ql-image\" />\n          </span>\n          <span className=\"ql-formats\">\n            <button id=\"code-block\" className=\"ql-code-block\" />\n          </span>\n        </div>\n\n        <ReactQuill\n          onChange={onNotesStateChange}\n          placeholder={!readOnly && \"Type Notes Here\"}\n          value={notesState}\n          modules={modules}\n          readOnly={readOnly}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FormEntryNotes;\n","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/StatisticsPanel/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/RevisionQuestionsPanel/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/LogCalendar/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/BarGraph/index.js",["305"],"import React, { useState } from \"react\";\nimport { CSSTranstion } from \"react-transition-group\";\nimport { useSelector } from \"react-redux\";\nimport ApexCharts from \"react-apexcharts\";\nimport { barGraphDataSelector } from \"./selectors/getBarGraphData\";\nimport { titleToTypeMap } from \"utils/titleAndTypeMaps\";\nimport \"./barGraph.scss\";\n\nconst BarGraph = () => {\n  const [barGraphView, setBarGraphView] = useState(\"weekEntryBarGraphData\");\n  const barGraphData = useSelector((state) => {\n    return barGraphDataSelector(state);\n  });\n\n  const onClickHandler = (event) => {\n    setBarGraphView(event.target.name);\n  };\n  const categories = [\n    \"Array\",\n    \"Backtracking\",\n    \"Bit Manipulation\",\n    \"Divide & Conquer\",\n    \"Dynamic Programming\",\n    \"Graph\",\n    \"Greedy\",\n    \"Linked List\",\n    \"Queue\",\n    \"Stack\",\n    \"String\",\n    \"Tree\",\n  ];\n\n  const getMappedDataForApexBarGraph = (barGraphData = {}, categories) => {\n    const dataArray = [];\n    categories.forEach((category) => {\n      const questionType = titleToTypeMap[category];\n      dataArray.push(barGraphData[questionType] || 0);\n    });\n    return dataArray;\n  };\n  const barGraphViewData = getMappedDataForApexBarGraph(\n    barGraphData[barGraphView],\n    categories\n  );\n\n  const series = [\n    {\n      name: \"Entry Count\",\n      data: barGraphViewData,\n    },\n  ];\n\n  const options = {\n    chart: {\n      toolbar: {\n        show: false,\n      },\n      type: \"bar\",\n      events: {\n        clicked: null,\n        dataPointMouseEnter: null,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        distributed: true,\n      },\n    },\n    legend: {\n      show: false,\n    },\n    dataLabels: {\n      enabled: true,\n\n      style: {\n        colors: [\"#989898\"],\n        fontWeight: 600,\n        fontFamily: \"QuickSand\",\n        padding: \"2px\",\n      },\n    },\n    fill: {\n      colors: [\n        \"#cde3f8\",\n        \"#f7d5d5\",\n        \"#ddf5ca\",\n        \"#f5def8\",\n        \"#ebd5f8\",\n        \"#ffd6e5\",\n        \"#c4f3eb\",\n        \"#f4f5ba\",\n        \"#c8f1da\",\n        \"#c3f0fc\",\n        \"#ffe6c8\",\n        \"#e2def8\",\n      ],\n    },\n    xaxis: {\n      labels: {\n        show: false,\n      },\n      categories,\n    },\n    yaxis: {\n      labels: {\n        show: true,\n        style: {\n          fontSize: \"1.35rem\",\n          fontFamily: \"QuickSand\",\n          fontWeight: \"600\",\n        },\n      },\n    },\n    grid: {\n      show: true,\n      strokeDashArray: 0,\n      position: \"back\",\n      xaxis: {\n        lines: {\n          show: false,\n        },\n      },\n      row: {\n        colors: undefined,\n        opacity: 0.5,\n      },\n      column: {\n        colors: undefined,\n        opacity: 0.5,\n      },\n      padding: {\n        right: 25,\n      },\n    },\n  };\n\n  let title;\n  switch (barGraphView) {\n    case \"weekEntryBarGraphData\":\n      title = \"Entries In The Past Week\";\n      break;\n    case \"monthEntryBarGraphData\":\n      title = \"Entries In The Past Month\";\n      break;\n    case \"threeMonthEntryBarGraphData\":\n      title = \"Entries In The Past Three Months\";\n      break;\n    case \"sixMonthEntryBarGraphData\":\n      title = \"Entries In The Past Six Months\";\n      break;\n    case \"yearEntryBarGraphData\":\n      title = \"Entries In The Past Twelve Months\";\n      break;\n    case \"allTimeBarGraphData\":\n      title = \"All Entries\";\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div className=\"BarGraph\">\n      <div className=\"BarGraph-title\">{title}</div>\n      <div className=\"BarGraph-button-box\">\n        <button\n          onClick={onClickHandler}\n          className={`BarGraph-button ${\n            barGraphView === \"weekEntryBarGraphData\"\n              ? \"BarGraph-button-active\"\n              : \"\"\n          }`}\n          name=\"weekEntryBarGraphData\"\n        >\n          week\n        </button>\n        <button\n          onClick={onClickHandler}\n          className={`BarGraph-button ${\n            barGraphView === \"monthEntryBarGraphData\"\n              ? \"BarGraph-button-active\"\n              : \"\"\n          }`}\n          name=\"monthEntryBarGraphData\"\n        >\n          month\n        </button>\n        <button\n          onClick={onClickHandler}\n          className={`BarGraph-button ${\n            barGraphView === \"threeMonthEntryBarGraphData\"\n              ? \"BarGraph-button-active\"\n              : \"\"\n          }`}\n          name=\"threeMonthEntryBarGraphData\"\n        >\n          3-months\n        </button>\n        <button\n          onClick={onClickHandler}\n          className={`BarGraph-button ${\n            barGraphView === \"sixMonthEntryBarGraphData\"\n              ? \"BarGraph-button-active\"\n              : \"\"\n          }`}\n          name=\"sixMonthEntryBarGraphData\"\n        >\n          6-months\n        </button>\n        <button\n          onClick={onClickHandler}\n          className={`BarGraph-button ${\n            barGraphView === \"yearEntryBarGraphData\"\n              ? \"BarGraph-button-active\"\n              : \"\"\n          }`}\n          name=\"yearEntryBarGraphData\"\n        >\n          12-months\n        </button>\n        <button\n          onClick={onClickHandler}\n          className={`BarGraph-button ${\n            barGraphView === \"allTimeBarGraphData\"\n              ? \"BarGraph-button-active\"\n              : \"\"\n          }`}\n          name=\"allTimeBarGraphData\"\n        >\n          all time\n        </button>\n      </div>\n      <ApexCharts options={options} series={series} type=\"bar\" height=\"550\" />\n    </div>\n  );\n};\n\nexport default BarGraph;\n","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/RecentQuestionsPanel/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/SideNav/NavItems/NavItem/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryRadioDropdown/index.js",["306","307"],"import React, { useState } from \"react\";\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport \"./formEntryRadioDropdown.scss\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst FormEntryRadioDropdown = ({\n  label,\n  onBoolChange,\n  reviewLater,\n  reviewDate,\n  onDateChange,\n}) => {\n  let datepicker = reviewLater ? (\n    <DatePicker\n      selected={reviewDate}\n      onChange={onDateChange}\n      local=\"moment\"\n      name=\"review\"\n      dateFormat=\"MMMM d, yyyy\"\n    />\n  ) : null;\n  return (\n    <div className=\"FormEntryRadioDropdown\">\n      <div className=\"FormEntryRadioDropdown-label\"> {label} </div>\n      <label\n        className=\"FormEntryRadioDropdown-radio-label\"\n        onClick={!reviewLater && onBoolChange}\n        id=\"willReview\"\n      >\n        Yes\n        <span\n          className={`FormEntryRadioDropdown-radio-button ${\n            reviewLater && \"FormEntryRadioDropdown-radio-button-selected\"\n          }`}\n          onClick={!reviewLater && onBoolChange}\n          id=\"willReview\"\n        ></span>\n      </label>\n      <label\n        className=\"FormEntryRadioDropdown-radio-label\"\n        onClick={reviewLater && onBoolChange}\n        id=\"wontReview\"\n      >\n        No\n        <span\n          className={`FormEntryRadioDropdown-radio-button ${\n            !reviewLater && \"FormEntryRadioDropdown-radio-button-selected\"\n          }`}\n          onClick={reviewLater && onBoolChange}\n          id=\"wontReview\"\n        ></span>\n      </label>\n      {datepicker}\n    </div>\n  );\n};\n\nexport default FormEntryRadioDropdown;\n","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntrySelect/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryRadio/index.js",["308"],"import React, { useState } from \"react\";\nimport \"./formEntryRadio.scss\";\n\nconst FormEntryRadioDropdown = ({ label, onBoolChange, value }) => {\n  return (\n    <div className=\"FormEntryRadio\">\n      <div className=\"FormEntryRadio-label\"> {label} </div>\n      <label\n        className=\"FormEntryRadio-radio-label\"\n        onClick={!value && onBoolChange}\n        id=\"withSolution\"\n      >\n        With Solution\n        <span\n          className={`FormEntryRadio-radio-button ${\n            value && \"FormEntryRadio-radio-button-selected\"\n          }`}\n          onClick={!value && onBoolChange}\n          id=\"withSolution\"\n        ></span>\n      </label>\n      <label\n        className=\"FormEntryRadio-radio-label\"\n        onClick={value && onBoolChange}\n        id=\"withoutSolution\"\n      >\n        Without Solution\n        <span\n          className={`FormEntryRadio-radio-button ${\n            !value && \"FormEntryRadio-radio-button-selected\"\n          }`}\n          onClick={value && onBoolChange}\n          id=\"withoutSolution\"\n        ></span>\n      </label>\n    </div>\n  );\n};\n\nexport default FormEntryRadioDropdown;\n","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryText/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryTags/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryTime/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/LogCalendar/CalendarLegend/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/LogCalendar/LogCalendarEvent/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/LogCalendar/LogCalendarEvent/marker.js",[],["309","310"],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/Tag/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-history/HistoryPanel/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/Question/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/Question/RevisionButtons/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/DatabaseItem/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/DatabaseQuestion/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/rootReducer.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/axios/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/entriesReducer.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/entriesActions/entriesActionTypes.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/entriesActions/entriesActionCreators.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/dateHelpers.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/BarGraph/selectors/getBarGraphData.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/titleAndTypeMaps.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-history/selectors/historyDataSelector.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/NoFields/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/paginatedData.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/Pagination/PaginatedDataSelector.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/questionsReducer.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/questionsActions/questionsActionsTypes.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/questionsActions/questionsActionCreators.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/RecentQuestionsPanel/RecentQuestion/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/RevisionQuestionsPanel/selectors/revisionQuestionsSelector.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/DatabaseQuestion/selectors/getQuestionDataByType.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/alphabetArray.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/alphabeticalSort.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/DatabaseQuestion/AlphabeticHeaderPanel/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/index.js",["311","312","313"],"import React, { useEffect, useState, useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport QuestionTypeTitle from \"components/common/QuestionTypeTitle\";\nimport EntryModal from \"./ModalComponents/EntryModal\";\nimport NoteModal from \"./ModalComponents/NoteModal\";\nimport ReviewDateEditModal from \"./ModalComponents/ReviewDateEditModal\";\nimport { axiosAWSInstance } from \"../../../axios\";\nimport EntrySummary from \"./QuestionPanelEntry/EntrySummary\";\nimport { ReactComponent as RightArrow } from \"svg/right-arrow.svg\";\nimport { ReactComponent as CheckmarkIcon } from \"svg/checkmark.svg\";\nimport Datepicker from \"react-datepicker\";\nimport {\n  openModal,\n  closeModal,\n} from \"store/actions/modalActions/modalActionCreators\";\nimport \"./questionPanel.scss\";\n\nconst QuestionPanel = (props) => {\n  const [reviewDate, setReviewDate] = useState(null);\n  const [questionData, setQuestionData] = useState({});\n  const [entrySelected, setEntrySelected] = useState({});\n\n  const dispatch = useDispatch();\n\n  const questionID = props.match.params.questionId;\n\n  const questionType = props.match.params.questionType;\n  useEffect(() => {\n    axiosAWSInstance\n      .get(`/questions/${questionID}`)\n      .then((res) => {\n        setQuestionData(res.data);\n        if (res.data.revisionDate !== -1) {\n          setReviewDate(new Date(res.data.revisionDate));\n        }\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const entries = useSelector((state) => {\n    if (\n      !questionData.title ||\n      !state.entryData ||\n      !state.entryData.entriesByTitleMap\n    )\n      return [];\n    return state.entryData.entriesByTitleMap[questionData.title];\n  });\n\n  const onEntryClick = (e) => {\n    const selectedEntryId = e.target.id;\n    if (!selectedEntryId) return;\n    let selectedEntry = {};\n    for (let entry of entries) {\n      if (entry.entryID === selectedEntryId) {\n        selectedEntry = entry;\n        break;\n      }\n    }\n    let selectedNotes = {};\n    for (let note of questionData.notes) {\n      if (note.entryID === selectedEntryId) {\n        selectedNotes = note;\n        break;\n      }\n    }\n    setEntrySelected({ ...selectedEntry, notes: selectedNotes });\n\n    setTimeout(() => dispatch(openModal(\"entry\")), 400);\n  };\n\n  const entryData = useMemo(() => {\n    if (Object.keys(entries) === 0) return [];\n\n    return entries.map((entry) => {\n      const {\n        approxCompletionHrs,\n        approxCompletionMins,\n        solvedWithSolution,\n        tags,\n        entryID,\n        submittedAt,\n      } = entry;\n\n      return (\n        <EntrySummary\n          id={entryID}\n          approxCompletionMins={approxCompletionMins}\n          approxCompletionHrs={approxCompletionHrs}\n          tags={tags}\n          difficulty={questionData.difficulty}\n          submittedAt={submittedAt}\n          questionType={questionType}\n          solvedWithSolution={solvedWithSolution}\n          onEntryClick={onEntryClick}\n        />\n      );\n    });\n  }, [entries]);\n\n  const onReviewDateChange = (date) => {\n    setReviewDate(date);\n  };\n\n  const onSaveReviewDate = () => {\n    dispatch(openModal(\"save review date\"));\n  };\n\n  const onRemoveReviewDate = () => {\n    dispatch(openModal(\"remove review date\"));\n  };\n\n  const onAddNote = () => {\n    dispatch(openModal(\"add note\"));\n  };\n  const isSameReviewDate = () => {\n    if (questionData.revisionDate === -1) {\n      return reviewDate === null;\n    }\n    let originReviewDateStartOfDay = null;\n    if (questionData.revisionDate) {\n      originReviewDateStartOfDay = new Date(questionData.revisionDate).setHours(\n        0,\n        0,\n        0,\n        0\n      );\n    }\n\n    let newReviewDateStartOfDate = null;\n    if (reviewDate) {\n      newReviewDateStartOfDate = reviewDate.setHours(0, 0, 0, 0);\n    }\n    return newReviewDateStartOfDate === originReviewDateStartOfDay;\n  };\n\n  const modalType = useSelector((state) => state.modal.modalType);\n\n  return (\n    <div\n      className={`QuestionPanel ${\n        modalType !== \"\" && \"QuestionPanel-scrollOff\"\n      }`}\n    >\n      {modalType === \"save review date\" && (\n        <ReviewDateEditModal date={reviewDate} height=\"26.5%\" />\n      )}\n      {modalType === \"remove review date\" && (\n        <ReviewDateEditModal isRemove={true} height=\"23%\" />\n      )}\n\n      {modalType === \"add note\" && (\n        <NoteModal header={`${questionData.title}: New Note`} />\n      )}\n\n      {modalType === \"entry\" && <EntryModal entry={entrySelected} />}\n\n      <QuestionTypeTitle\n        title={questionData && questionData.title}\n        onBack={() => props.history.push(`/database/${questionType}`)}\n        type={questionType}\n        onAdd={onAddNote}\n      />\n      <div className=\"QuestionPanel-info-bar\">\n        <span\n          className={`QuestionPanel-info QuestionPanel-${questionData.difficulty}`}\n        >{`Difficulty: ${questionData ? questionData.difficulty : \"\"}`}</span>\n        <span className=\"QuestionPanel-revision\">\n          <span className=\"QuestionPanel-revision-label\"> Revision Date: </span>\n          <Datepicker\n            selected={reviewDate}\n            onChange={onReviewDateChange}\n            dateFormat=\"MMMM d, yyyy\"\n          />\n          {!isSameReviewDate() && (\n            <CheckmarkIcon\n              className=\"QuestionPanel-revision-save\"\n              onClick={onSaveReviewDate}\n            />\n          )}\n          {reviewDate && (\n            <span\n              className={`QuestionPanel-revision-remove ${\n                !isSameReviewDate() && \"QuestionPanel-revision-remove-withSave\"\n              }`}\n              onClick={onRemoveReviewDate}\n            >\n              x\n            </span>\n          )}\n        </span>\n        <a\n          href={questionData?.url}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className={`QuestionPanel-info QuestionPanel-url QuestionPanel-${questionType}`}\n        >\n          Go To Leetcode Question\n          <RightArrow className=\"QuestionPanel-url-icon\" />\n        </a>\n      </div>\n      <div className=\"QuestionPanel-box\">\n        <div className=\"QuestionPanel-box-header\">Notes</div>\n        <div className=\"QuestionPanel-entries\"></div>\n        <div className=\"QuestionPanel-box-header\">Entries</div>\n        <div className=\"QuestionPanel-entries\">{entryData}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionPanel;\n","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/QuestionTypeTitle/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/QuestionPanelEntry/index.js",["314","315"],"import React from \"react\";\nimport \"./questionPanelEntry.scss\";\nimport { milisecondsToDateStringWithTime } from \"utils/dateHelpers\";\nimport draftToHtml from \"draftjs-to-html\";\nimport parse from \"html-react-parser\";\nconst QuestionPanelEntry = ({\n  approxCompletionHrs,\n  approxCompletionMins,\n  solvedWithSolution,\n  tags,\n  submittedAt,\n  notes,\n}) => {\n  console.log(notes);\n  return (\n    <div className=\"QuestionPanelEntry\">\n      <div className=\"QuestionPanelEntry-header\">\n        {milisecondsToDateStringWithTime(submittedAt)}\n      </div>\n      <div className=\"QuestionPanelEntry-content\">\n        <div className=\"QuestionPanelEntry-content-notes\"></div>\n        <div className=\"QuestioPanelEntry-content-info\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionPanelEntry;\n",["316","317"],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/Validation/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/validationReducer.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/validationActions/validationActionTypes.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/validationActions/validationActionCreators.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/textHelpers.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/addFormHelpers.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/QuestionPanelEntry/EntrySummary/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/modalReducer.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/modalActions/modalActionTypes.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/modalActions/modalActionCreators.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/EntryModal.js",["318","319","320","321"],"import React from \"react\";\nimport ModalComponent from \"./modalComponent\";\nimport FormEntryNotes from \"components/package-addForm/AddForm/FormEntryNotes\";\nimport \"./modalComponents.scss\";\nimport { milisecondsToDateString } from \"utils/dateHelpers\";\nconst EntryModal = ({ entry }) => {\n  const {\n    notes,\n    submittedAt,\n    approxCompletionHrs,\n    approxCompletionMins,\n    tag,\n    solvedWithSolution,\n    title,\n  } = entry;\n\n  console.log(entry);\n  return (\n    <ModalComponent\n      height=\"85%\"\n      width=\"70%\"\n      paddingRight=\"2rem\"\n      header={`${title} Entry - ${milisecondsToDateString(submittedAt)}`}\n      lg\n    >\n      <div className=\"NoteModal-editor\">\n        <FormEntryNotes\n          //   type=\"NoteModal\"\n          readOnly={true}\n          notesState={notes.content}\n        />\n      </div>\n      <hr />\n      <button className=\"NoteModal-save\"> Save </button>\n    </ModalComponent>\n  );\n};\n\nexport default EntryModal;\n","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/NoteModal.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/ReviewDateEditModal.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/modalComponent.js",[],{"ruleId":"322","replacedBy":"323"},{"ruleId":"324","replacedBy":"325"},{"ruleId":"326","severity":1,"message":"327","line":23,"column":6,"nodeType":"328","endLine":23,"endColumn":8,"suggestions":"329"},{"ruleId":"330","severity":1,"message":"331","line":1,"column":17,"nodeType":"332","messageId":"333","endLine":1,"endColumn":26},{"ruleId":"330","severity":1,"message":"334","line":2,"column":10,"nodeType":"332","messageId":"333","endLine":2,"endColumn":22},{"ruleId":"330","severity":1,"message":"335","line":1,"column":17,"nodeType":"332","messageId":"333","endLine":1,"endColumn":25},{"ruleId":"330","severity":1,"message":"336","line":2,"column":22,"nodeType":"332","messageId":"333","endLine":2,"endColumn":36},{"ruleId":"330","severity":1,"message":"335","line":1,"column":17,"nodeType":"332","messageId":"333","endLine":1,"endColumn":25},{"ruleId":"322","replacedBy":"337"},{"ruleId":"324","replacedBy":"338"},{"ruleId":"330","severity":1,"message":"339","line":14,"column":3,"nodeType":"332","messageId":"333","endLine":14,"endColumn":13},{"ruleId":"326","severity":1,"message":"340","line":38,"column":6,"nodeType":"328","endLine":38,"endColumn":8,"suggestions":"341"},{"ruleId":"326","severity":1,"message":"342","line":99,"column":6,"nodeType":"328","endLine":99,"endColumn":15,"suggestions":"343"},{"ruleId":"330","severity":1,"message":"344","line":4,"column":8,"nodeType":"332","messageId":"333","endLine":4,"endColumn":19},{"ruleId":"330","severity":1,"message":"345","line":5,"column":8,"nodeType":"332","messageId":"333","endLine":5,"endColumn":13},{"ruleId":"322","replacedBy":"346"},{"ruleId":"324","replacedBy":"347"},{"ruleId":"330","severity":1,"message":"348","line":10,"column":5,"nodeType":"332","messageId":"333","endLine":10,"endColumn":24},{"ruleId":"330","severity":1,"message":"349","line":11,"column":5,"nodeType":"332","messageId":"333","endLine":11,"endColumn":25},{"ruleId":"330","severity":1,"message":"350","line":12,"column":5,"nodeType":"332","messageId":"333","endLine":12,"endColumn":8},{"ruleId":"330","severity":1,"message":"351","line":13,"column":5,"nodeType":"332","messageId":"333","endLine":13,"endColumn":23},"no-native-reassign",["352"],"no-negated-in-lhs",["353"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["354"],"no-unused-vars","'createRef' is defined but never used.","Identifier","unusedVar","'CSSTranstion' is defined but never used.","'useState' is defined but never used.","'registerLocale' is defined but never used.",["352"],["353"],"'closeModal' is defined but never used.","React Hook useEffect has a missing dependency: 'questionID'. Either include it or remove the dependency array.",["355"],"React Hook useMemo has missing dependencies: 'onEntryClick', 'questionData.difficulty', and 'questionType'. Either include them or remove the dependency array.",["356"],"'draftToHtml' is defined but never used.","'parse' is defined but never used.",["352"],["353"],"'approxCompletionHrs' is assigned a value but never used.","'approxCompletionMins' is assigned a value but never used.","'tag' is assigned a value but never used.","'solvedWithSolution' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},"Update the dependencies array to be: [dispatch]",{"range":"363","text":"364"},"Update the dependencies array to be: [questionID]",{"range":"365","text":"366"},"Update the dependencies array to be: [entries, onEntryClick, questionData.difficulty, questionType]",{"range":"367","text":"368"},[1003,1005],"[dispatch]",[1438,1440],"[questionID]",[2990,2999],"[entries, onEntryClick, questionData.difficulty, questionType]"]
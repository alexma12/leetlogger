[{"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/index.js":"1","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/App.js":"2","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/Layout/index.js":"3","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/Header/index.js":"4","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/SideNav/index.js":"5","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/Dashboard/index.js":"6","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/SideNav/NavItems/index.js":"7","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/Header/Logo/index.js":"8","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryNotes/index.js":"9","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/StatisticsPanel/index.js":"10","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/index.js":"11","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/RevisionQuestionsPanel/index.js":"12","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/LogCalendar/index.js":"13","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/BarGraph/index.js":"14","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/RecentQuestionsPanel/index.js":"15","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/SideNav/NavItems/NavItem/index.js":"16","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryRadioDropdown/index.js":"17","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntrySelect/index.js":"18","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryRadio/index.js":"19","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryText/index.js":"20","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryTags/index.js":"21","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryTime/index.js":"22","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/LogCalendar/CalendarLegend/index.js":"23","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/LogCalendar/LogCalendarEvent/index.js":"24","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/LogCalendar/LogCalendarEvent/marker.js":"25","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/Tag/index.js":"26","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-history/HistoryPanel/index.js":"27","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/Question/index.js":"28","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/index.js":"29","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/DatabaseItem/index.js":"30","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/index.js":"31","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/DatabaseQuestion/index.js":"32","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/index.js":"33","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/rootReducer.js":"34","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/axios/index.js":"35","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/entriesReducer.js":"36","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/entriesActions/entriesActionTypes.js":"37","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/entriesActions/entriesActionCreators.js":"38","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/dateHelpers.js":"39","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/BarGraph/selectors/getBarGraphData.js":"40","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/titleAndTypeMaps.js":"41","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-history/selectors/historyDataSelector.js":"42","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/NoFields/index.js":"43","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/paginatedData.js":"44","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/Pagination/PaginatedDataSelector.js":"45","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/questionsReducer.js":"46","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/questionsActions/questionsActionsTypes.js":"47","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/questionsActions/questionsActionCreators.js":"48","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/RecentQuestionsPanel/RecentQuestion/index.js":"49","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/RevisionQuestionsPanel/selectors/revisionQuestionsSelector.js":"50","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/DatabaseQuestion/selectors/getQuestionDataByType.js":"51","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/alphabetArray.js":"52","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/alphabeticalSort.js":"53","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/DatabaseQuestion/AlphabeticHeaderPanel/index.js":"54","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/index.js":"55","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/QuestionTypeTitle/index.js":"56","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/Validation/index.js":"57","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/validationReducer.js":"58","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/validationActions/validationActionTypes.js":"59","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/validationActions/validationActionCreators.js":"60","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/textHelpers.js":"61","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/addFormHelpers.js":"62","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/QuestionPanelEntry/EntrySummary/index.js":"63","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/modalReducer.js":"64","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/modalActions/modalActionTypes.js":"65","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/modalActions/modalActionCreators.js":"66","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/EntryModal.js":"67","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/NoteModal.js":"68","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/ReviewDateEditModal.js":"69","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/modalComponent.js":"70","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/QuestionPanelEntry/EntrySummary/noteSummary.js":"71","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/QuestionPanelEntry/EntrySummary/NoteSummary.js":"72","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/DeleteNoteModal.js":"73","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/ModalComponent.js":"74","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/DeleteEntryModal.js":"75"},{"size":176,"mtime":1610277437970,"results":"76","hashOfConfig":"77"},{"size":322,"mtime":1613273846932,"results":"78","hashOfConfig":"77"},{"size":2065,"mtime":1615772295929,"results":"79","hashOfConfig":"77"},{"size":214,"mtime":1610276951204,"results":"80","hashOfConfig":"77"},{"size":230,"mtime":1610318470195,"results":"81","hashOfConfig":"77"},{"size":599,"mtime":1617593278786,"results":"82","hashOfConfig":"77"},{"size":329,"mtime":1612062391237,"results":"83","hashOfConfig":"77"},{"size":347,"mtime":1613284696782,"results":"84","hashOfConfig":"77"},{"size":2429,"mtime":1617508209864,"results":"85","hashOfConfig":"77"},{"size":2447,"mtime":1613354765625,"results":"86","hashOfConfig":"77"},{"size":2140,"mtime":1618453000371,"results":"87","hashOfConfig":"77"},{"size":2774,"mtime":1617590765971,"results":"88","hashOfConfig":"77"},{"size":1840,"mtime":1613962095213,"results":"89","hashOfConfig":"77"},{"size":5493,"mtime":1614490638583,"results":"90","hashOfConfig":"77"},{"size":1341,"mtime":1613713130977,"results":"91","hashOfConfig":"77"},{"size":1713,"mtime":1613962304071,"results":"92","hashOfConfig":"77"},{"size":1569,"mtime":1614574510860,"results":"93","hashOfConfig":"77"},{"size":1357,"mtime":1615157500043,"results":"94","hashOfConfig":"77"},{"size":1120,"mtime":1614569818995,"results":"95","hashOfConfig":"77"},{"size":830,"mtime":1614581818216,"results":"96","hashOfConfig":"77"},{"size":1131,"mtime":1615862040250,"results":"97","hashOfConfig":"77"},{"size":689,"mtime":1614565909124,"results":"98","hashOfConfig":"77"},{"size":487,"mtime":1610341481369,"results":"99","hashOfConfig":"77"},{"size":500,"mtime":1612051459419,"results":"100","hashOfConfig":"77"},{"size":338,"mtime":1612050588643,"results":"101","hashOfConfig":"77"},{"size":510,"mtime":1617591080920,"results":"102","hashOfConfig":"77"},{"size":3908,"mtime":1617594576710,"results":"103","hashOfConfig":"77"},{"size":2548,"mtime":1617594989301,"results":"104","hashOfConfig":"77"},{"size":888,"mtime":1617594179525,"results":"105","hashOfConfig":"77"},{"size":602,"mtime":1613957833747,"results":"106","hashOfConfig":"77"},{"size":5211,"mtime":1617492897815,"results":"107","hashOfConfig":"77"},{"size":3122,"mtime":1617595655731,"results":"108","hashOfConfig":"77"},{"size":316,"mtime":1613549423360,"results":"109","hashOfConfig":"77"},{"size":425,"mtime":1615771631429,"results":"110","hashOfConfig":"77"},{"size":153,"mtime":1613278774821,"results":"111","hashOfConfig":"77"},{"size":1107,"mtime":1613969805799,"results":"112","hashOfConfig":"77"},{"size":274,"mtime":1615156460139,"results":"113","hashOfConfig":"77"},{"size":7325,"mtime":1619493054538,"results":"114","hashOfConfig":"77"},{"size":1061,"mtime":1614489419501,"results":"115","hashOfConfig":"77"},{"size":604,"mtime":1613960686621,"results":"116","hashOfConfig":"77"},{"size":621,"mtime":1613358257865,"results":"117","hashOfConfig":"77"},{"size":259,"mtime":1613450414912,"results":"118","hashOfConfig":"77"},{"size":277,"mtime":1616985435349,"results":"119","hashOfConfig":"77"},{"size":525,"mtime":1613450617359,"results":"120","hashOfConfig":"77"},{"size":1500,"mtime":1615764295503,"results":"121","hashOfConfig":"77"},{"size":483,"mtime":1615166646695,"results":"122","hashOfConfig":"77"},{"size":68,"mtime":1614470489694,"results":"123","hashOfConfig":"77"},{"size":3544,"mtime":1617585444557,"results":"124","hashOfConfig":"77"},{"size":665,"mtime":1613713149645,"results":"125","hashOfConfig":"77"},{"size":348,"mtime":1615176133003,"results":"126","hashOfConfig":"77"},{"size":371,"mtime":1613969762420,"results":"127","hashOfConfig":"77"},{"size":223,"mtime":1613967609040,"results":"128","hashOfConfig":"77"},{"size":378,"mtime":1613969710975,"results":"129","hashOfConfig":"77"},{"size":1101,"mtime":1614469668210,"results":"130","hashOfConfig":"77"},{"size":9773,"mtime":1619493450339,"results":"131","hashOfConfig":"77"},{"size":774,"mtime":1615683009543,"results":"132","hashOfConfig":"77"},{"size":576,"mtime":1617483888820,"results":"133","hashOfConfig":"77"},{"size":589,"mtime":1615160364958,"results":"134","hashOfConfig":"77"},{"size":102,"mtime":1615160196497,"results":"135","hashOfConfig":"77"},{"size":403,"mtime":1617486315256,"results":"136","hashOfConfig":"77"},{"size":1181,"mtime":1615165960533,"results":"137","hashOfConfig":"77"},{"size":1564,"mtime":1615771051384,"results":"138","hashOfConfig":"77"},{"size":2056,"mtime":1619491726169,"results":"139","hashOfConfig":"77"},{"size":503,"mtime":1615775739647,"results":"140","hashOfConfig":"77"},{"size":82,"mtime":1615770179192,"results":"141","hashOfConfig":"77"},{"size":251,"mtime":1615772675794,"results":"142","hashOfConfig":"77"},{"size":2273,"mtime":1619490933143,"results":"143","hashOfConfig":"77"},{"size":2446,"mtime":1617585535430,"results":"144","hashOfConfig":"77"},{"size":3089,"mtime":1617585465133,"results":"145","hashOfConfig":"77"},{"size":802,"mtime":1617570828758,"results":"146","hashOfConfig":"77"},{"size":380,"mtime":1616997942960,"results":"147","hashOfConfig":"77"},{"size":979,"mtime":1617584375944,"results":"148","hashOfConfig":"77"},{"size":1131,"mtime":1617585479556,"results":"149","hashOfConfig":"77"},{"size":802,"mtime":1617570828758,"results":"150","hashOfConfig":"77"},{"size":998,"mtime":1619491675181,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"nroaic",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"154"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"154"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"154"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"154"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"154"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"154"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"154"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"154"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/index.js",[],["312","313"],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/App.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/Layout/index.js",["314"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Header from \"../Header\";\nimport SideNav from \"../SideNav\";\nimport Dashboard from \"../package-dashboard/Dashboard\";\nimport AddForm from \"../package-addForm/AddForm\";\nimport History from \"../package-history/HistoryPanel\";\nimport Database from \"../package-database/Database\";\nimport Validation from \"../common/Validation\";\nimport DatabaseQuestion from \"../package-database/Database/DatabaseQuestion\";\nimport QuestionPanel from \"../package-database/QuestionPanel\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport * as entryActions from \"store/actions/entriesActions/entriesActionCreators\";\nimport * as questionActions from \"store/actions/questionsActions/questionsActionCreators\";\nimport \"./layout.scss\";\n\nconst Layout = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(entryActions.loadEntries());\n    dispatch(questionActions.loadQuestions());\n  }, []);\n\n  const validation = useSelector((state) => state.validation);\n  const isModalOpen = useSelector((state) => state.modal.show);\n  return (\n    <div>\n      {isModalOpen && <div className=\"Layout-modal\"></div>}\n      {validation.show && (\n        <Validation message={validation.message} isError={validation.isError} />\n      )}\n      <div className=\"Layout-content\">\n        <BrowserRouter>\n          <Header />\n          <SideNav />\n          <Switch>\n            <Route path=\"/new\" component={AddForm} />\n            <Route path=\"/history\" component={History} />\n            <Route path=\"/database\" exact component={Database} />\n            <Route\n              path=\"/database/:questionType\"\n              exact\n              component={DatabaseQuestion}\n            />\n            <Route\n              path=\"/database/:questionType/:questionId\"\n              component={QuestionPanel}\n            />\n            <Route path=\"/\" component={Dashboard} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/Header/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/SideNav/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/Dashboard/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/SideNav/NavItems/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/Header/Logo/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryNotes/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/StatisticsPanel/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/RevisionQuestionsPanel/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/LogCalendar/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/BarGraph/index.js",["315"],"import React, { useState } from \"react\";\nimport { CSSTranstion } from \"react-transition-group\";\nimport { useSelector } from \"react-redux\";\nimport ApexCharts from \"react-apexcharts\";\nimport { barGraphDataSelector } from \"./selectors/getBarGraphData\";\nimport { titleToTypeMap } from \"utils/titleAndTypeMaps\";\nimport \"./barGraph.scss\";\n\nconst BarGraph = () => {\n  const [barGraphView, setBarGraphView] = useState(\"weekEntryBarGraphData\");\n  const barGraphData = useSelector((state) => {\n    return barGraphDataSelector(state);\n  });\n\n  const onClickHandler = (event) => {\n    setBarGraphView(event.target.name);\n  };\n  const categories = [\n    \"Array\",\n    \"Backtracking\",\n    \"Bit Manipulation\",\n    \"Divide & Conquer\",\n    \"Dynamic Programming\",\n    \"Graph\",\n    \"Greedy\",\n    \"Linked List\",\n    \"Queue\",\n    \"Stack\",\n    \"String\",\n    \"Tree\",\n  ];\n\n  const getMappedDataForApexBarGraph = (barGraphData = {}, categories) => {\n    const dataArray = [];\n    categories.forEach((category) => {\n      const questionType = titleToTypeMap[category];\n      dataArray.push(barGraphData[questionType] || 0);\n    });\n    return dataArray;\n  };\n  const barGraphViewData = getMappedDataForApexBarGraph(\n    barGraphData[barGraphView],\n    categories\n  );\n\n  const series = [\n    {\n      name: \"Entry Count\",\n      data: barGraphViewData,\n    },\n  ];\n\n  const options = {\n    chart: {\n      toolbar: {\n        show: false,\n      },\n      type: \"bar\",\n      events: {\n        clicked: null,\n        dataPointMouseEnter: null,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        distributed: true,\n      },\n    },\n    legend: {\n      show: false,\n    },\n    dataLabels: {\n      enabled: true,\n\n      style: {\n        colors: [\"#989898\"],\n        fontWeight: 600,\n        fontFamily: \"QuickSand\",\n        padding: \"2px\",\n      },\n    },\n    fill: {\n      colors: [\n        \"#cde3f8\",\n        \"#f7d5d5\",\n        \"#ddf5ca\",\n        \"#f5def8\",\n        \"#ebd5f8\",\n        \"#ffd6e5\",\n        \"#c4f3eb\",\n        \"#f4f5ba\",\n        \"#c8f1da\",\n        \"#c3f0fc\",\n        \"#ffe6c8\",\n        \"#e2def8\",\n      ],\n    },\n    xaxis: {\n      labels: {\n        show: false,\n      },\n      categories,\n    },\n    yaxis: {\n      labels: {\n        show: true,\n        style: {\n          fontSize: \"1.35rem\",\n          fontFamily: \"QuickSand\",\n          fontWeight: \"600\",\n        },\n      },\n    },\n    grid: {\n      show: true,\n      strokeDashArray: 0,\n      position: \"back\",\n      xaxis: {\n        lines: {\n          show: false,\n        },\n      },\n      row: {\n        colors: undefined,\n        opacity: 0.5,\n      },\n      column: {\n        colors: undefined,\n        opacity: 0.5,\n      },\n      padding: {\n        right: 25,\n      },\n    },\n  };\n\n  let title;\n  switch (barGraphView) {\n    case \"weekEntryBarGraphData\":\n      title = \"Entries In The Past Week\";\n      break;\n    case \"monthEntryBarGraphData\":\n      title = \"Entries In The Past Month\";\n      break;\n    case \"threeMonthEntryBarGraphData\":\n      title = \"Entries In The Past Three Months\";\n      break;\n    case \"sixMonthEntryBarGraphData\":\n      title = \"Entries In The Past Six Months\";\n      break;\n    case \"yearEntryBarGraphData\":\n      title = \"Entries In The Past Twelve Months\";\n      break;\n    case \"allTimeBarGraphData\":\n      title = \"All Entries\";\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div className=\"BarGraph\">\n      <div className=\"BarGraph-title\">{title}</div>\n      <div className=\"BarGraph-button-box\">\n        <button\n          onClick={onClickHandler}\n          className={`BarGraph-button ${\n            barGraphView === \"weekEntryBarGraphData\"\n              ? \"BarGraph-button-active\"\n              : \"\"\n          }`}\n          name=\"weekEntryBarGraphData\"\n        >\n          week\n        </button>\n        <button\n          onClick={onClickHandler}\n          className={`BarGraph-button ${\n            barGraphView === \"monthEntryBarGraphData\"\n              ? \"BarGraph-button-active\"\n              : \"\"\n          }`}\n          name=\"monthEntryBarGraphData\"\n        >\n          month\n        </button>\n        <button\n          onClick={onClickHandler}\n          className={`BarGraph-button ${\n            barGraphView === \"threeMonthEntryBarGraphData\"\n              ? \"BarGraph-button-active\"\n              : \"\"\n          }`}\n          name=\"threeMonthEntryBarGraphData\"\n        >\n          3-months\n        </button>\n        <button\n          onClick={onClickHandler}\n          className={`BarGraph-button ${\n            barGraphView === \"sixMonthEntryBarGraphData\"\n              ? \"BarGraph-button-active\"\n              : \"\"\n          }`}\n          name=\"sixMonthEntryBarGraphData\"\n        >\n          6-months\n        </button>\n        <button\n          onClick={onClickHandler}\n          className={`BarGraph-button ${\n            barGraphView === \"yearEntryBarGraphData\"\n              ? \"BarGraph-button-active\"\n              : \"\"\n          }`}\n          name=\"yearEntryBarGraphData\"\n        >\n          12-months\n        </button>\n        <button\n          onClick={onClickHandler}\n          className={`BarGraph-button ${\n            barGraphView === \"allTimeBarGraphData\"\n              ? \"BarGraph-button-active\"\n              : \"\"\n          }`}\n          name=\"allTimeBarGraphData\"\n        >\n          all time\n        </button>\n      </div>\n      <ApexCharts options={options} series={series} type=\"bar\" height=\"550\" />\n    </div>\n  );\n};\n\nexport default BarGraph;\n","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/RecentQuestionsPanel/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/SideNav/NavItems/NavItem/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryRadioDropdown/index.js",["316","317"],"import React, { useState } from \"react\";\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport \"./formEntryRadioDropdown.scss\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst FormEntryRadioDropdown = ({\n  label,\n  onBoolChange,\n  reviewLater,\n  reviewDate,\n  onDateChange,\n}) => {\n  let datepicker = reviewLater ? (\n    <DatePicker\n      selected={reviewDate}\n      onChange={onDateChange}\n      local=\"moment\"\n      name=\"review\"\n      dateFormat=\"MMMM d, yyyy\"\n    />\n  ) : null;\n  return (\n    <div className=\"FormEntryRadioDropdown\">\n      <div className=\"FormEntryRadioDropdown-label\"> {label} </div>\n      <label\n        className=\"FormEntryRadioDropdown-radio-label\"\n        onClick={!reviewLater && onBoolChange}\n        id=\"willReview\"\n      >\n        Yes\n        <span\n          className={`FormEntryRadioDropdown-radio-button ${\n            reviewLater && \"FormEntryRadioDropdown-radio-button-selected\"\n          }`}\n          onClick={!reviewLater && onBoolChange}\n          id=\"willReview\"\n        ></span>\n      </label>\n      <label\n        className=\"FormEntryRadioDropdown-radio-label\"\n        onClick={reviewLater && onBoolChange}\n        id=\"wontReview\"\n      >\n        No\n        <span\n          className={`FormEntryRadioDropdown-radio-button ${\n            !reviewLater && \"FormEntryRadioDropdown-radio-button-selected\"\n          }`}\n          onClick={reviewLater && onBoolChange}\n          id=\"wontReview\"\n        ></span>\n      </label>\n      {datepicker}\n    </div>\n  );\n};\n\nexport default FormEntryRadioDropdown;\n","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntrySelect/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryRadio/index.js",["318"],"import React, { useState } from \"react\";\nimport \"./formEntryRadio.scss\";\n\nconst FormEntryRadioDropdown = ({ label, onBoolChange, value }) => {\n  return (\n    <div className=\"FormEntryRadio\">\n      <div className=\"FormEntryRadio-label\"> {label} </div>\n      <label\n        className=\"FormEntryRadio-radio-label\"\n        onClick={!value && onBoolChange}\n        id=\"withSolution\"\n      >\n        With Solution\n        <span\n          className={`FormEntryRadio-radio-button ${\n            value && \"FormEntryRadio-radio-button-selected\"\n          }`}\n          onClick={!value && onBoolChange}\n          id=\"withSolution\"\n        ></span>\n      </label>\n      <label\n        className=\"FormEntryRadio-radio-label\"\n        onClick={value && onBoolChange}\n        id=\"withoutSolution\"\n      >\n        Without Solution\n        <span\n          className={`FormEntryRadio-radio-button ${\n            !value && \"FormEntryRadio-radio-button-selected\"\n          }`}\n          onClick={value && onBoolChange}\n          id=\"withoutSolution\"\n        ></span>\n      </label>\n    </div>\n  );\n};\n\nexport default FormEntryRadioDropdown;\n","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryText/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryTags/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/FormEntryDetails/FormEntryTime/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/LogCalendar/CalendarLegend/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/LogCalendar/LogCalendarEvent/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/LogCalendar/LogCalendarEvent/marker.js",[],["319","320"],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/Tag/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-history/HistoryPanel/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/Question/index.js",["321"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {} from \"store/actions/questionsActions/questionsActionCreators\";\nimport { openModal } from \"store/actions/modalActions/modalActionCreators\";\nimport Tag from \"../Tag\";\nimport \"./question.scss\";\n\nconst Question = ({\n  componentType,\n  title,\n  date,\n  due,\n  tags,\n  completionTimeHrs,\n  completionTimeMins,\n  solvedWithSolution,\n  questionType,\n  difficulty,\n  dbType,\n  questionID,\n  entryCount,\n  onClick,\n}) => {\n  const history = useHistory();\n\n  const isRevisionQuestion = componentType === \"RevisionQuestion\";\n  const isQuestion = componentType === \"Question\";\n  const revisionButtons = (\n    <div className=\"Question-buttons\">\n      <Tag\n        tag=\"review\"\n        size=\"sm\"\n        onClick={() => {\n          history.push(\"/database/\" + questionType + \"/\" + questionID);\n        }}\n      />\n    </div>\n  );\n\n  const solvedRecap = (\n    <div className=\"Question-solvedRecap\">\n      <div className=\"Question-solvedRecap-completionTime\">\n        Completion Time:\n        <span className=\"Question-solvedRecap-completionTime-time\">{` ${completionTimeHrs} hrs ${completionTimeMins} mins`}</span>\n      </div>\n      {!solvedWithSolution ? (\n        <div className=\"Question-solvedRecap-withoutSolution\">\n          solved without solution\n        </div>\n      ) : (\n        <div className=\"Question-solvedRecap-withSolution\">\n          solved with solution\n        </div>\n      )}\n    </div>\n  );\n\n  const tagComponents =\n    tags &&\n    tags.map((tag) => {\n      return <Tag tag={tag} size=\"sm\" isDefault />;\n    });\n\n  const revisionReviewDate = (\n    <div className=\"Question-date\">\n      review on:{\" \"}\n      <span\n        className={`Question-date-content ${\n          due && \"Question-date-content-due\"\n        }`}\n      >{` ${date}`}</span>\n    </div>\n  );\n  return (\n    <div\n      className={`Question ${\n        dbType && `Question-dbQuestion Question-${dbType}`\n      }`}\n      onClick={onClick}\n    >\n      <div className=\"Question-title\"> {title} </div>\n      {isRevisionQuestion && revisionReviewDate}\n      <div className=\"Question-tags\">\n        <Tag tag={difficulty || \"\"} size=\"sm\" />\n        <Tag tag={questionType || \"\"} size=\"sm\" />\n        {tagComponents}\n      </div>\n      {isQuestion && solvedRecap}\n      {isRevisionQuestion && revisionButtons}\n      {entryCount && (\n        <div className=\"Question-dbQuestion-entryCount\">\n          {`Logged Entries: ${entryCount}`}\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Question;\n","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/DatabaseItem/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-addForm/AddForm/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/DatabaseQuestion/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/rootReducer.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/axios/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/entriesReducer.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/entriesActions/entriesActionTypes.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/entriesActions/entriesActionCreators.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/dateHelpers.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/BarGraph/selectors/getBarGraphData.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/titleAndTypeMaps.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-history/selectors/historyDataSelector.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/NoFields/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/paginatedData.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/Pagination/PaginatedDataSelector.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/questionsReducer.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/questionsActions/questionsActionsTypes.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/questionsActions/questionsActionCreators.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/RecentQuestionsPanel/RecentQuestion/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-dashboard/RevisionQuestionsPanel/selectors/revisionQuestionsSelector.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/DatabaseQuestion/selectors/getQuestionDataByType.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/alphabetArray.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/alphabeticalSort.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/Database/DatabaseQuestion/AlphabeticHeaderPanel/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/index.js",["322","323","324"],"import React, { useEffect, useState, useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport QuestionTypeTitle from \"components/common/QuestionTypeTitle\";\nimport EntryModal from \"./ModalComponents/EntryModal\";\nimport NoteModal from \"./ModalComponents/NoteModal\";\nimport ReviewDateEditModal from \"./ModalComponents/ReviewDateEditModal\";\nimport DeleteEntryModal from \"./ModalComponents/DeleteEntryModal\";\nimport DeleteNoteModal from \"./ModalComponents/DeleteNoteModal\";\nimport { axiosAWSInstance } from \"../../../axios\";\nimport EntrySummary from \"./QuestionPanelEntry/EntrySummary\";\nimport { ReactComponent as RightArrow } from \"svg/right-arrow.svg\";\nimport { ReactComponent as FloppyDiskIcon } from \"svg/floppy-disk.svg\";\nimport { ReactComponent as GarbageIcon } from \"svg/delete.svg\";\nimport Datepicker from \"react-datepicker\";\nimport NoteSummary from \"./QuestionPanelEntry/EntrySummary/NoteSummary\";\nimport {\n  openModal,\n  closeModal,\n} from \"store/actions/modalActions/modalActionCreators\";\nimport { setValidation } from \"store/actions/validationActions/validationActionCreators\";\nimport {\n  editQuestionNote,\n  deleteQuestionNote,\n} from \"store/actions/questionsActions/questionsActionCreators\";\nimport { deleteEntry } from \"store/actions/entriesActions/entriesActionCreators\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./questionPanel.scss\";\n\nconst QuestionPanel = (props) => {\n  const [reviewDate, setReviewDate] = useState(null);\n  const [questionData, setQuestionData] = useState({});\n  const [entrySelected, setEntrySelected] = useState({});\n  const [entryToDelete, setEntryToDelete] = useState(\"\");\n  const [noteSelected, setNoteSelected] = useState({});\n  const [noteToDelete, setNoteToDelete] = useState({});\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const questionID = props.match.params.questionId;\n  const questionType = props.match.params.questionType;\n\n  const retrieveData = async () => {\n    await axiosAWSInstance\n      .get(`/questions/${questionID}`)\n      .then((res) => {\n        setQuestionData(res.data);\n        if (res.data.revisionDate !== -1) {\n          setReviewDate(new Date(res.data.revisionDate));\n        }\n      })\n      .catch((err) => {\n        history.replace(\"/\");\n        dispatch(setValidation(err));\n      });\n  };\n\n  useEffect(() => {\n    retrieveData();\n  }, []);\n\n  const entries = useSelector((state) => {\n    if (\n      !questionData.title ||\n      !state.entryData ||\n      !state.entryData.entriesByTitleMap\n    )\n      return [];\n    return state.entryData.entriesByTitleMap[questionData.title];\n  });\n\n  const onEntryClick = (e) => {\n    const selectedEntryId = e.target.id;\n    if (!selectedEntryId) return;\n    let selectedEntry = {};\n    for (let entry of entries) {\n      if (entry.entryID === selectedEntryId) {\n        selectedEntry = entry;\n        break;\n      }\n    }\n    let selectedNotes = {};\n    for (let note of questionData.notes) {\n      if (note.entryID === selectedEntryId) {\n        selectedNotes = note;\n        break;\n      }\n    }\n    setEntrySelected({ ...selectedEntry, notes: selectedNotes });\n\n    setTimeout(() => dispatch(openModal(\"entry\")), 400);\n  };\n\n  const entryData = useMemo(() => {\n    if (!entries || Object.keys(entries) === 0) history.replace(\"/\");\n\n    return (entries || []).map((entry) => {\n      const {\n        approxCompletionHrs,\n        approxCompletionMins,\n        solvedWithSolution,\n        tags,\n        entryID,\n        submittedAt,\n        title,\n      } = entry;\n      return (\n        <EntrySummary\n          id={entryID}\n          approxCompletionMins={approxCompletionMins}\n          approxCompletionHrs={approxCompletionHrs}\n          title={title}\n          tags={tags}\n          difficulty={questionData.difficulty}\n          submittedAt={submittedAt}\n          questionType={questionType}\n          solvedWithSolution={solvedWithSolution}\n          onEntryClick={onEntryClick}\n          setEntryToDelete={setEntryToDelete}\n        />\n      );\n    });\n  }, [entries]);\n\n  const onNoteClick = (e) => {\n    const selectedNoteId = e.target.id;\n    if (!selectedNoteId) return;\n    for (let note of questionData.notes) {\n      if (note.noteID === selectedNoteId) {\n        setNoteSelected(note);\n        break;\n      }\n    }\n    dispatch(openModal(\"open note\"));\n  };\n\n  const questionNotesData = useMemo(() => {\n    return (questionData.notes || [])\n      .filter((note) => {\n        return note.isQuestionNote === true;\n      })\n      .sort((a, b) => {\n        if (a.lastUpdated > b.lastUpdated) {\n          return -1;\n        } else {\n          return 1;\n        }\n      })\n      .map((questionNote) => {\n        return (\n          <NoteSummary\n            title={questionNote.title}\n            questionType={questionType}\n            noteID={questionNote.noteID}\n            lastUpdated={questionNote.lastUpdated}\n            onClick={onNoteClick}\n            setNoteToDelete={setNoteToDelete}\n          />\n        );\n      });\n  }, [questionData]);\n\n  const onReviewDateChange = (date) => {\n    setReviewDate(date);\n  };\n\n  const onSaveReviewDate = () => {\n    dispatch(openModal(\"save review date\"));\n  };\n\n  const onRemoveReviewDate = () => {\n    dispatch(openModal(\"remove review date\"));\n  };\n\n  const onAddNote = () => {\n    dispatch(openModal(\"add note\"));\n  };\n\n  const deleteEntryCallback = () => {\n    dispatch(closeModal());\n  };\n\n  const onDeleteEntry = () => {\n    dispatch(deleteEntry(entryToDelete, deleteEntryCallback));\n  };\n\n  const onDeleteNote = () => {\n    const noteData = {\n      noteID: noteToDelete.noteID,\n      questionID,\n    };\n    dispatch(deleteQuestionNote(noteData, retrieveData));\n  };\n\n  const isSameReviewDate = () => {\n    if (questionData.revisionDate === -1) {\n      return reviewDate === null;\n    }\n    let originReviewDateStartOfDay = null;\n    if (questionData.revisionDate) {\n      originReviewDateStartOfDay = new Date(questionData.revisionDate).setHours(\n        0,\n        0,\n        0,\n        0\n      );\n    }\n\n    let newReviewDateStartOfDate = null;\n    if (reviewDate) {\n      newReviewDateStartOfDate = reviewDate.setHours(0, 0, 0, 0);\n    }\n    return newReviewDateStartOfDate === originReviewDateStartOfDay;\n  };\n\n  const onSaveNote = (content, title, noteID, retrieveData) => {\n    const noteObject = {\n      content,\n      title,\n      noteID,\n      questionID,\n    };\n    dispatch(editQuestionNote(noteObject, retrieveData));\n  };\n  const modalType = useSelector((state) => state.modal.modalType);\n\n  return (\n    <div\n      className={`QuestionPanel ${\n        modalType !== \"\" && \"QuestionPanel-scrollOff\"\n      }`}\n    >\n      {modalType === \"save review date\" && (\n        <ReviewDateEditModal\n          originalDate={questionData.revisionDate}\n          date={reviewDate}\n          height=\"26.5%\"\n        />\n      )}\n      {modalType === \"remove review date\" && (\n        <ReviewDateEditModal date={reviewDate} isRemove={true} height=\"23%\" />\n      )}\n\n      {modalType === \"add note\" && (\n        <NoteModal\n          header={`${questionData.title}: New Note`}\n          retrieveData={retrieveData}\n        />\n      )}\n\n      {modalType === \"open note\" && (\n        <NoteModal\n          header={`${questionData.title} Note`}\n          note={noteSelected}\n          onSaveNote={onSaveNote}\n          retrieveData={retrieveData}\n        />\n      )}\n\n      {modalType === \"entry\" && <EntryModal entry={entrySelected} />}\n\n      {modalType === \"delete entry\" && (\n        <DeleteEntryModal entry={entryToDelete} onDeleteEntry={onDeleteEntry} />\n      )}\n\n      {modalType === \"delete note\" && (\n        <DeleteNoteModal note={noteToDelete} onDeleteNote={onDeleteNote} />\n      )}\n\n      <QuestionTypeTitle\n        title={questionData && questionData.title}\n        onBack={() => props.history.push(`/database/${questionType}`)}\n        type={questionType}\n        onAdd={onAddNote}\n      />\n      <div className=\"QuestionPanel-info-bar\">\n        <span\n          className={`QuestionPanel-info QuestionPanel-${questionData.difficulty}`}\n        >{`Difficulty: ${questionData ? questionData.difficulty : \"\"}`}</span>\n        <span className=\"QuestionPanel-revision\">\n          <span className=\"QuestionPanel-revision-label\"> Revision Date: </span>\n          <Datepicker\n            selected={reviewDate}\n            local=\"moment\"\n            onChange={onReviewDateChange}\n            dateFormat=\"MMMM d, yyyy\"\n          />\n          {!isSameReviewDate() && (\n            <FloppyDiskIcon\n              className=\"QuestionPanel-revision-save\"\n              onClick={onSaveReviewDate}\n            />\n          )}\n          {questionData.revisionDate !== -1 && (\n            <GarbageIcon\n              className={`QuestionPanel-revision-remove ${\n                !isSameReviewDate() && \"QuestionPanel-revision-remove-withSave\"\n              }`}\n              onClick={onRemoveReviewDate}\n            />\n          )}\n        </span>\n        <a\n          href={questionData?.url}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className={`QuestionPanel-info QuestionPanel-url QuestionPanel-${questionType}`}\n        >\n          Go To Leetcode Question\n          <RightArrow className=\"QuestionPanel-url-icon\" />\n        </a>\n      </div>\n      <div className=\"QuestionPanel-box\">\n        {questionNotesData.length > 0 && (\n          <div className=\"QuestionPanel-box-header\">Notes</div>\n        )}\n        <div className=\"QuestionPanel-entries\">{questionNotesData}</div>\n        <div className=\"QuestionPanel-box-header\">Entries</div>\n        <div className=\"QuestionPanel-entries\">{entryData}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionPanel;\n","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/QuestionTypeTitle/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/common/Validation/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/validationReducer.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/validationActions/validationActionTypes.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/validationActions/validationActionCreators.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/textHelpers.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/utils/addFormHelpers.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/QuestionPanelEntry/EntrySummary/index.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/reducers/modalReducer.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/modalActions/modalActionTypes.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/store/actions/modalActions/modalActionCreators.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/EntryModal.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/NoteModal.js",["325"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ModalComponent from \"./ModalComponent\";\nimport FormEntryNotes from \"components/package-addForm/AddForm/FormEntryNotes\";\nimport { useHistory } from \"react-router-dom\";\nimport { saveQuestionNote } from \"store/actions/questionsActions/questionsActionCreators\";\nimport \"./modalComponents.scss\";\nconst NoteModal = ({ header, note, onSaveNote, retrieveData }) => {\n  const [notesState, setNotesState] = useState((note && note.content) || \"\");\n  const [title, setTitle] = useState((note && note.title) || \"\");\n  const [titleInvalid, setTitleInvalid] = useState(false);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const inputRef = useRef();\n  const modalType = useSelector((state) => state.modal.modalType);\n\n  const questionID = history.location.pathname.split(\"/\")[3];\n\n  const onNotesStateChange = (value) => {\n    setNotesState(value);\n  };\n\n  const onAddQuestionNote = () => {\n    if (title.trim() === \"\") {\n      inputRef.current.focus();\n      return setTitleInvalid(true);\n    }\n    const noteObject = {\n      title,\n      content: notesState,\n      questionID,\n    };\n    dispatch(saveQuestionNote(noteObject, retrieveData));\n  };\n\n  const onSaveQuestionNote = () => {\n    if (title.trim() === \"\") {\n      inputRef.current.focus();\n      return setTitleInvalid(true);\n    }\n    onSaveNote(notesState, title, note.noteID, retrieveData);\n  };\n\n  const onTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  return (\n    <ModalComponent height=\"85%\" width=\"70%\" header={header} lg>\n      <div className=\"NoteModal-title\">\n        Title:\n        <input\n          className={`NoteModal-title-input ${\n            titleInvalid && \"NoteModal-title-input-invalid\"\n          }`}\n          ref={inputRef}\n          value={title}\n          onChange={onTitleChange}\n          placeholder=\"Enter Note Title Here\"\n        />\n      </div>\n      <div className=\"NoteModal-editor\">\n        <FormEntryNotes\n          type=\"NoteModal\"\n          notesState={notesState}\n          onNotesStateChange={onNotesStateChange}\n        />\n      </div>\n\n      <button\n        className=\"NoteModal-button NoteModal-save\"\n        onClick={\n          modalType === \"add note\" ? onAddQuestionNote : onSaveQuestionNote\n        }\n      >\n        Save\n      </button>\n    </ModalComponent>\n  );\n};\n\nexport default NoteModal;\n","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/ReviewDateEditModal.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/modalComponent.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/QuestionPanelEntry/EntrySummary/noteSummary.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/QuestionPanelEntry/EntrySummary/NoteSummary.js",["326"],"import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport { openModal } from \"store/actions/modalActions/modalActionCreators\";\n\nimport \"./entrySummary.scss\";\nconst NoteSummary = ({\n  title,\n  onClick,\n  lastUpdated,\n  questionType,\n  noteID,\n  setNoteToDelete,\n}) => {\n  const dispatch = useDispatch();\n\n  const openDeleteNoteModal = () => {\n    dispatch(openModal(\"delete note\"));\n    setNoteToDelete({ title, noteID });\n  };\n  return (\n    <div\n      id={noteID}\n      className={`EntrySummary NoteEntry NoteEntry-${questionType}-note`}\n      onClick={onClick}\n    >\n      <div id={noteID} className=\"EntrySummary-title\">\n        {title}\n      </div>\n\n      <div id={noteID} className=\"NoteEntry-lastUpdated\">\n        {moment(new Date(lastUpdated)).fromNow()}\n      </div>\n\n      <div className=\"NoteEntry-delete\" onClick={openDeleteNoteModal}>\n        x\n      </div>\n    </div>\n  );\n};\n\nexport default NoteSummary;\n","/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/DeleteNoteModal.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/ModalComponent.js",[],"/Users/alexma/Desktop/leetlogger/react-frontend/leetlogger/src/components/package-database/QuestionPanel/ModalComponents/DeleteEntryModal.js",[],{"ruleId":"327","replacedBy":"328"},{"ruleId":"329","replacedBy":"330"},{"ruleId":"331","severity":1,"message":"332","line":23,"column":6,"nodeType":"333","endLine":23,"endColumn":8,"suggestions":"334"},{"ruleId":"335","severity":1,"message":"336","line":2,"column":10,"nodeType":"337","messageId":"338","endLine":2,"endColumn":22},{"ruleId":"335","severity":1,"message":"339","line":1,"column":17,"nodeType":"337","messageId":"338","endLine":1,"endColumn":25},{"ruleId":"335","severity":1,"message":"340","line":2,"column":22,"nodeType":"337","messageId":"338","endLine":2,"endColumn":36},{"ruleId":"335","severity":1,"message":"339","line":1,"column":17,"nodeType":"337","messageId":"338","endLine":1,"endColumn":25},{"ruleId":"327","replacedBy":"341"},{"ruleId":"329","replacedBy":"342"},{"ruleId":"335","severity":1,"message":"343","line":4,"column":10,"nodeType":"337","messageId":"338","endLine":4,"endColumn":19},{"ruleId":"331","severity":1,"message":"344","line":61,"column":6,"nodeType":"333","endLine":61,"endColumn":8,"suggestions":"345"},{"ruleId":"331","severity":1,"message":"346","line":124,"column":6,"nodeType":"333","endLine":124,"endColumn":15,"suggestions":"347"},{"ruleId":"331","severity":1,"message":"348","line":162,"column":6,"nodeType":"333","endLine":162,"endColumn":20,"suggestions":"349"},{"ruleId":"335","severity":1,"message":"350","line":1,"column":35,"nodeType":"337","messageId":"338","endLine":1,"endColumn":44},{"ruleId":"335","severity":1,"message":"351","line":2,"column":10,"nodeType":"337","messageId":"338","endLine":2,"endColumn":21},"no-native-reassign",["352"],"no-negated-in-lhs",["353"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["354"],"no-unused-vars","'CSSTranstion' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'registerLocale' is defined but never used.",["352"],["353"],"'openModal' is defined but never used.","React Hook useEffect has a missing dependency: 'retrieveData'. Either include it or remove the dependency array.",["355"],"React Hook useMemo has missing dependencies: 'history', 'onEntryClick', 'questionData.difficulty', and 'questionType'. Either include them or remove the dependency array.",["356"],"React Hook useMemo has missing dependencies: 'onNoteClick' and 'questionType'. Either include them or remove the dependency array.",["357"],"'useEffect' is defined but never used.","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},"Update the dependencies array to be: [dispatch]",{"range":"366","text":"367"},"Update the dependencies array to be: [retrieveData]",{"range":"368","text":"369"},"Update the dependencies array to be: [entries, history, onEntryClick, questionData.difficulty, questionType]",{"range":"370","text":"371"},"Update the dependencies array to be: [onNoteClick, questionData.notes, questionType]",{"range":"372","text":"373"},[1003,1005],"[dispatch]",[2430,2432],"[retrieveData]",[4097,4106],"[entries, history, onEntryClick, questionData.difficulty, questionType]",[5074,5088],"[onNoteClick, questionData.notes, questionType]"]